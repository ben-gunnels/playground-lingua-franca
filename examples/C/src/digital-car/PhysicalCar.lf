/**
 * This code is generated using OpenAI gpt-3.5-turbo model for text generation 
 * and text-embedding-ada-002 for retrieval and embeddings. 
 * 
 * @author Moez Ben Hajhmida
 */


 target C
 {
  keepalive: true,
 }

 import WebSocketClient from "../lib/WebSocketClient.lf" 

reactor PhyCar {
  state lock: string = "locked"  
  input from_websocket: char*
  output to_websocket: char*
  logical action state_change
  logical action unlock

  client = new WebSocketClient()


  reaction(startup)-> unlock{=
    // Initialize state as 'locked'.
    lf_print("++++++ Physical Car door is locked at startup.");
    self->lock = "locked";
    // lf_schedule(unlock, SEC(2));
  =}




  reaction(from_websocket){=
    self->lock = from_websocket->value;
    lf_print("++++++ Physical Car door is now %s.", self->lock);
  =}

  // reaction(state_change)->to_websocket{=
  //   lf_set(to_websocket, self->lock);
  //   lf_print("Physical Car Sending %s   %s.", self->lock, to_websocket->value);    
  // =}

  reaction(state_change)->client.in_static{= 
    lf_set(client.in_static, self->lock);
    lf_print("++++++ Physical Car Sending %s at state_change.", self->lock);
  =}


  reaction(unlock)->client.in_static{=
    if (self->lock == "locked"){
      self->lock = "unlocked";
    }else{
      self->lock = "locked";
    }      
    lf_set(client.in_static, self->lock);
    lf_print("++++++ Physical Car Sending %s.", self->lock);
    lf_schedule(unlock, SEC(2));
  =}
}

