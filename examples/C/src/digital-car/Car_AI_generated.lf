/**
 * This code is generated using OpenAI gpt-3.5-turbo model for text generation and
 * text-embedding-ada-002 for retrieval and embeddings.
 *
 * @author Moez Ben Hajhmida
 */
target C

/**
 * User prompt:
 *
 * For the C language as a target, write a code for:
 * - a reactor 'Car' that declares a state variable 'lock'. The state variable 'lock' value is
 * 'locked' or 'open'.
 * - At the start of the program, the reactor 'Car' initiates its state as 'locked'. Then connects
 * to the the WebSocket server.
 * - When the reactor 'Car' receives a message from the WebSocket server, the reactor waits for 3
 * seconds, then the message value is assigned to the lock state.
 * - Each time the state 'lock' is updated the reactors sends the new state value to the the
 * WebSocket server.
 */
/** Automatically generated code: */
reactor Car {
  state lock: char* = "locked"

  logical action to_websocket  // output to_websocket: char*

  reaction(startup) {=
    // Initialize state as 'locked'.
    lf_print("Car door is locked.");
    lf_schedule_token(to_websocket, SEC(3), self->lock);
  =}

  reaction(to_websocket) {=
    self->lock = to_websocket->value;
    lf_print("Car door is now %s.", self->lock);
    lf_schedule_token(to_websocket, SEC(3), self->lock);
  =}
}
